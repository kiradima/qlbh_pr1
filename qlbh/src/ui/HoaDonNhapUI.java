/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entity.HoaDonNhap;
import entity.HoaDonNhapChiTiet;
import entity.NhaCungCap;
import entity.NhanVien;
import entity.TK;
import entity.TKR;
import java.awt.Font;
import java.io.File;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Kira
 */
public class HoaDonNhapUI extends javax.swing.JFrame {

    ArrayList<HoaDonNhap> hoaDonNhaps;
    ArrayList<NhanVien> nhanViens;
    ArrayList<NhaCungCap> nhaCungCaps;
    ArrayList<TK> tks;
    ArrayList<TKR> tkrs;
    int export = 1;
    // @export :
    //      1 : tất cả
    //      2 : thống kê
    //      3 : tìm kiếm
    String thuocTinh = "";

    /**
     * Creates new form HoaDonNhapUI
     */
    public HoaDonNhapUI() {
        initComponents();
        setTitle("Hóa đơn nhập");
        this.setLocationRelativeTo(null);
        refresh();

        nhanViens = NhanVien.getAll();
        loadCbbNV(nhanViens);
        nhaCungCaps = NhaCungCap.getAll();
        loadCbbNCC(nhaCungCaps);

        refresh();

        JTableHeader header = table.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
        txtTongTien.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rbMNV = new javax.swing.JRadioButton();
        rbNgay = new javax.swing.JRadioButton();
        rbMNCC = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMHDN = new javax.swing.JTextField();
        txtTT = new javax.swing.JTextField();
        dateTG = new com.toedter.calendar.JDateChooser();
        cbbMNV = new javax.swing.JComboBox<>();
        txtTNV = new javax.swing.JTextField();
        txtTimKiem = new javax.swing.JTextField();
        btnTK = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnQuayLai = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnImportFile = new javax.swing.JButton();
        btnExportFile = new javax.swing.JButton();
        btnCTHDN = new javax.swing.JButton();
        rbThang = new javax.swing.JRadioButton();
        rbNam = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JLabel();
        cbbMNCC = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtTNCC = new javax.swing.JTextField();
        rbMHDN = new javax.swing.JRadioButton();
        rbTG = new javax.swing.JRadioButton();
        rbTT = new javax.swing.JRadioButton();
        rbTNCC = new javax.swing.JRadioButton();
        rbTNV = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("TÌM KIẾM ");

        buttonGroup1.add(rbMNV);
        rbMNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMNV.setText("Mã nhân viên");

        buttonGroup1.add(rbNgay);
        rbNgay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbNgay.setText("Ngày");

        buttonGroup1.add(rbMNCC);
        rbMNCC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMNCC.setText("Mã nhà cung cấp");
        rbMNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMNCCActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã nhân viên : ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mã hóa đơn nhập : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mã nhà cung cấp : ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Thời gian : ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tổng tiền : ");

        txtMHDN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        dateTG.setDateFormatString("dd-MM-yyyy");
        dateTG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbbMNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMNVActionPerformed(evt);
            }
        });

        txtTNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTNVActionPerformed(evt);
            }
        });

        btnTK.setBackground(new java.awt.Color(102, 102, 255));
        btnTK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTK.setForeground(new java.awt.Color(51, 51, 51));
        btnTK.setText("Tìm kiếm");
        btnTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tên nhân viên : ");

        btnThem.setBackground(new java.awt.Color(102, 102, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 51));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(102, 102, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(51, 51, 51));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(102, 102, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 51));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThongKe.setBackground(new java.awt.Color(102, 102, 255));
        btnThongKe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongKe.setForeground(new java.awt.Color(51, 51, 51));
        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(102, 102, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(51, 51, 51));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        btnQuayLai.setBackground(new java.awt.Color(102, 102, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnQuayLai.setForeground(new java.awt.Color(51, 51, 51));
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(51, 51, 51));
        btnRefresh.setText("Refresh");
        btnRefresh.setToolTipText("");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnImportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnImportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnImportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnImportFile.setText("Thêm 1 file");
        btnImportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportFileActionPerformed(evt);
            }
        });

        btnExportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnExportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnExportFile.setText("Xuất 1 file");
        btnExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFileActionPerformed(evt);
            }
        });

        btnCTHDN.setBackground(new java.awt.Color(102, 102, 255));
        btnCTHDN.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCTHDN.setForeground(new java.awt.Color(51, 51, 51));
        btnCTHDN.setText("Chi tiết hóa đơn nhập");
        btnCTHDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTHDNActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbThang);
        rbThang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbThang.setText("Tháng");

        buttonGroup1.add(rbNam);
        rbNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbNam.setText("Năm");

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Đăng xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("NHẬP HÓA ĐƠN NHẬP");

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("CỬA HÀNG MÁY VI TÍNH  K-P-T XIN CHÀO QUÝ KHÁCH !");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("Nhóm1");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 0));
        jLabel9.setText("Đoàn Văn Tiến");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("Hàn Trung Kiên");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("Phan Hà Phương");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtTongTien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTongTien.setText("Tổng tiền : ");

        cbbMNCC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMNCCActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Tên nhà cung cấp : ");

        txtTNCC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTNCCActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbMHDN);
        rbMHDN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMHDN.setText("Mã hóa đơn nhập");

        buttonGroup1.add(rbTG);
        rbTG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbTG.setText("Thòi gian");

        buttonGroup1.add(rbTT);
        rbTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbTT.setText("Tổng tiền");

        buttonGroup1.add(rbTNCC);
        rbTNCC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbTNCC.setText("Tên nhà cung cấp");

        buttonGroup1.add(rbTNV);
        rbTNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbTNV.setText("Tên nhân viên");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(214, 214, 214))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnQuayLai)
                        .addGap(248, 248, 248)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMHDN)
                            .addComponent(rbTG)
                            .addComponent(rbTT)
                            .addComponent(rbTNV)
                            .addComponent(rbTNCC))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMNV)
                            .addComponent(rbMNCC)
                            .addComponent(rbThang)
                            .addComponent(rbNam)
                            .addComponent(rbNgay))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMHDN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTT, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbMNV, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbMNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateTG, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTNV, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnTK)
                                    .addComponent(btnImportFile))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnThongKe)
                                    .addComponent(btnExportFile)))
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCTHDN)
                        .addGap(18, 18, 18)
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset)
                        .addGap(114, 114, 114))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(652, Short.MAX_VALUE)
                .addComponent(txtTongTien)
                .addGap(257, 257, 257))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(22, 22, 22))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExportFile, btnImportFile, btnTK, btnThongKe});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbbMNCC, cbbMNV, dateTG, txtMHDN, txtTT});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbMNV)
                            .addComponent(rbMHDN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbTG)
                            .addComponent(rbMNCC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbTT)
                            .addComponent(rbThang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbTNV)
                            .addComponent(rbNam))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbTNCC)
                            .addComponent(rbNgay)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel7)
                                .addComponent(txtTNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel14)
                                .addComponent(txtTNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(50, 50, 50))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel3)
                                .addComponent(txtMHDN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel2)
                                .addComponent(cbbMNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel4)
                                .addComponent(cbbMNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel5)
                                .addComponent(dateTG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel6)
                                .addComponent(txtTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTK)
                        .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(btnCTHDN)
                        .addComponent(btnThem)
                        .addComponent(btnSua)
                        .addComponent(btnXoa)
                        .addComponent(btnReset)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnImportFile)
                    .addComponent(btnExportFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTongTien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuayLai)
                    .addComponent(btnRefresh)
                    .addComponent(jButton1)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExportFile, btnImportFile, btnTK, btnThongKe});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTNVActionPerformed
        // TODO insert your handling code here:
    }//GEN-LAST:event_txtTNVActionPerformed

    private void rbMNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMNCCActionPerformed
        // TODO insert your handling code here:
    }//GEN-LAST:event_rbMNCCActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO insert your handling code here:
        txtTongTien.setVisible(true);
        tks = new ArrayList<>();
        try {
            if (rbMNV.isSelected()) {
                thuocTinh = HoaDonNhap.TT_MA_NHAN_VIEN;
            } else if (rbMNCC.isSelected()) {
                thuocTinh = HoaDonNhap.TT_MA_NHA_CUNG_CAP;
            } else if (rbNgay.isSelected()) {
                thuocTinh = "Ngày";
            } else if (rbThang.isSelected()) {
                thuocTinh = "Tháng";
            } else if (rbNam.isSelected()) {
                thuocTinh = "Năm";
            }
            tkrs = HoaDonNhap.thongKeRieng(thuocTinh);
            loadTableTKR(thuocTinh);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnThongKeActionPerformed

    private void cbbMNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMNVActionPerformed
        // TODO insert your handling code here:
        // chọn mã -> show tên
        txtTNV.setText(nhanViens.get(cbbMNV.getSelectedIndex()).getTenNhanVien());
    }//GEN-LAST:event_cbbMNVActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO insert your handling code here:
        if (!txtMHDN.getText().equals("")
                && !((JTextField) dateTG.getDateEditor().
                        getUiComponent()).getText().equals("")) {
            // nếu đảm bảo điền đầy đủ thông tin
            if (1 == HoaDonNhap.insert(getCurrentObject())) {
                JOptionPane.showMessageDialog(null, "Insert thành công");
                refresh();
                reset();
            }
        } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
            JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO insert your handling code here:
        refresh();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO insert your handling code here:
        if (!txtMHDN.getText().equals("")
                && !((JTextField) dateTG.getDateEditor().
                        getUiComponent()).getText().equals("")) {
            // nếu đảm bảo điền đầy đủ thông tin
            if (1 == HoaDonNhap.update(getCurrentObject())) {
                JOptionPane.showMessageDialog(null, "Update thành công");
                refresh();
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Update thất bại");
            }
        } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
            JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO insert your handling code here:
        //nếu xác nhận là có 
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Xóa", 0)) {
            if (!txtMHDN.getText().equals("")) { // xóa chỉ cần nhập mã
                if (1 == HoaDonNhap.delete(Integer.parseInt(txtMHDN.getText()))) {
                    JOptionPane.showMessageDialog(null, "Delete thành công");
                    refresh();
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Delete thất bại");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Điền mã để xóa");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKActionPerformed
        // TODO insert your handling code here:
        export = 3;
        // @export :
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm

        hoaDonNhaps = new ArrayList<>();
        if (rbMHDN.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_MA_NHAP);
        }
        if (rbMNV.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_MA_NHAN_VIEN);
        }
        if (rbMNCC.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_MA_NHA_CUNG_CAP);
        }
        if (rbTG.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_THOI_GIAN);
        }
        if (rbTT.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_TONG_TIEN);
        }
        if (rbTNV.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_TEN_NHAN_VIEN);
        }
        if (rbTNCC.isSelected()) {
            hoaDonNhaps = HoaDonNhap.search(txtTimKiem.getText(), HoaDonNhap.TT_TEN_NHA_CUNG_CAP);
        }
        loadTable();
    }//GEN-LAST:event_btnTKActionPerformed

    private void btnImportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFileActionPerformed
        // TODO insert your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            if (HoaDonNhap.importExcel(file) == 1) {
                JOptionPane.showMessageDialog(null, "Thêm thành công");
                refresh();
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại");
            }
        }
    }//GEN-LAST:event_btnImportFileActionPerformed

    private void btnExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFileActionPerformed
        // TODO insert your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            if (HoaDonNhap.exportDoc(file, hoaDonNhaps, export, tkrs, thuocTinh) == 1) {
                JOptionPane.showMessageDialog(null, "Xuất file thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
            }
        }
    }//GEN-LAST:event_btnExportFileActionPerformed

    private void btnCTHDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTHDNActionPerformed
        // TODO insert your handling code here:
//        HoaDonNhap o = getCurrentObject();
        HoaDonNhapChiTietUI frame = new HoaDonNhapChiTietUI(Integer.parseInt(txtMHDN.getText()));
        frame.show();
        this.dispose();
    }//GEN-LAST:event_btnCTHDNActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO insert your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO insert your handling code here:
        TrangChu o = new TrangChu();
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO insert your handling code here:
        new DangNhap().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbbMNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMNCCActionPerformed
        // TODO insert your handling code here:
        txtTNCC.setText(nhaCungCaps.get(cbbMNCC.getSelectedIndex()).getTenNhaCungCap());
    }//GEN-LAST:event_cbbMNCCActionPerformed

    private void txtTNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTNCCActionPerformed
        // TODO insert your handling code here:
    }//GEN-LAST:event_txtTNCCActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonNhapUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCTHDN;
    private javax.swing.JButton btnExportFile;
    private javax.swing.JButton btnImportFile;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTK;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbMNCC;
    private javax.swing.JComboBox<String> cbbMNV;
    private com.toedter.calendar.JDateChooser dateTG;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbMHDN;
    private javax.swing.JRadioButton rbMNCC;
    private javax.swing.JRadioButton rbMNV;
    private javax.swing.JRadioButton rbNam;
    private javax.swing.JRadioButton rbNgay;
    private javax.swing.JRadioButton rbTG;
    private javax.swing.JRadioButton rbTNCC;
    private javax.swing.JRadioButton rbTNV;
    private javax.swing.JRadioButton rbTT;
    private javax.swing.JRadioButton rbThang;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtMHDN;
    private javax.swing.JTextField txtTNCC;
    private javax.swing.JTextField txtTNV;
    private javax.swing.JTextField txtTT;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JLabel txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        table.setEnabled(true);
        table.removeAll();
        if (hoaDonNhaps != null) {
            String[] columns = new String[]{"TT", HoaDonNhap.TT_MA_NHAP, "Nhân viên",
                "Nhà cung cấp", HoaDonNhap.TT_THOI_GIAN, HoaDonNhap.TT_TONG_TIEN};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (int i = 0; i < hoaDonNhaps.size(); i++) {
                HoaDonNhap o = hoaDonNhaps.get(i);
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(o.getMaNhap() + "");
                vector.add(NhanVien.get(o.getMaNhanVien()).getTenNhanVien());
                vector.add(NhaCungCap.get(o.getMaNhaCungCap()).getTenNhaCungCap());
                vector.add(new SimpleDateFormat("dd-MM-yyyy").format(o.getThoiGian()));
                vector.add(new DecimalFormat("###,###").format(o.getTongTien()));
                model.addRow(vector);
            }
            table.setModel(model);
            table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (table.getSelectedRow() >= 0) {
                        HoaDonNhap o = hoaDonNhaps.get(table.getSelectedRow());
                        txtMHDN.setText(o.getMaNhap() + "");
                        for (int i = 0; i < nhanViens.size(); i++) {
                            if (nhanViens.get(i).getMaNhanVien() == o.getMaNhanVien()) {
                                cbbMNV.setSelectedIndex(i);
                                txtTNV.setText(nhanViens.get(i).getTenNhanVien());
                                break;
                            }
                        }
                        for (int i = 0; i < nhaCungCaps.size(); i++) {
                            if (nhaCungCaps.get(i).getMaNhaCungCap() == o.getMaNhaCungCap()) {
                                cbbMNCC.setSelectedIndex(i);
                                txtTNCC.setText(nhaCungCaps.get(i).getTenNhaCungCap());
                                break;
                            }
                        }
                        dateTG.setDate(o.getThoiGian());
                        txtTT.setText(new DecimalFormat("###.#").format(o.getTongTien()) + "");
                    }
                }
            });
        }
    }

    private void loadTableTK(String thuocTinh) {
        export = 2;
        // @export :
        //      0 : mặc định
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        table.removeAll();
        if (tks != null) {
            String[] columns = new String[]{"TT", thuocTinh, "Số lượng"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (int i = 0; i < tks.size(); i++) {
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(tks.get(i).getThuocTinh());
                vector.add(tks.get(i).getSoLuong());
                model.addRow(vector);
            }
            table.setModel(model);
        }
        table.setEnabled(false);
    }

    private void loadTableTKR(String thuocTinh) {
        export = 2;
        // @export :
        //      0 : mặc định
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        table.removeAll();
        if (tkrs != null) {
            String[] columns = new String[]{"TT", thuocTinh,
                "Số lượng", "Tổng tiền"};
            if (thuocTinh.equals(HoaDonNhap.TT_MA_NHAN_VIEN)) {
                columns = new String[]{"TT", thuocTinh, "Tên nhân viên",
                    "Số lượng", "Tổng tiền"};
            }
            if (thuocTinh.equals(HoaDonNhap.TT_MA_NHA_CUNG_CAP)) {
                columns = new String[]{"TT", thuocTinh, "Tên nhà cung cấp",
                    "Số lượng", "Tổng tiền"};
            }
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            double tongTien = 0;
            for (int i = 0; i < tkrs.size(); i++) {
                TKR tkr = tkrs.get(i);
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(tkr.getTk().getThuocTinh());
                if (thuocTinh.equals(HoaDonNhap.TT_MA_NHAN_VIEN)) {
                    vector.add(NhanVien.get(Integer.parseInt(tkr.getTk().getThuocTinh())).getTenNhanVien());
                }
                if (thuocTinh.equals(HoaDonNhap.TT_MA_NHA_CUNG_CAP)) {
                    vector.add(NhaCungCap.get(Integer.parseInt(tkr.getTk().getThuocTinh())).getTenNhaCungCap());
                }
                vector.add(tkr.getTk().getSoLuong());
                vector.add(new DecimalFormat("###,###").format(tkr.getTongTien()));
                tongTien += tkr.getTongTien();
                model.addRow(vector);
            }
            table.setModel(model);
            txtTongTien.setText("Tổng tiền : " + new DecimalFormat("###,###").format(tongTien));
        }
        table.setEnabled(false);
    }

    private void loadCbbNV(ArrayList<NhanVien> list) {
        cbbMNV.removeAllItems();
        for (int i = 0; i < list.size(); i++) {
            cbbMNV.addItem(list.get(i).getMaNhanVien() + "");
        }
    }

    private void loadCbbNCC(ArrayList<NhaCungCap> list) {
        cbbMNCC.removeAllItems();
        for (int i = 0; i < list.size(); i++) {
            cbbMNCC.addItem(list.get(i).getMaNhaCungCap() + "");
        }
    }

    private void reset() {
        txtMHDN.setText("");
        cbbMNV.setSelectedIndex(0);
        cbbMNCC.setSelectedIndex(0);
        ((JTextField) dateTG.getDateEditor().getUiComponent()).setText("");
        txtTT.setText("");
    }

    private void refresh() {
//        HoaDonNhapChiTiet.updateTongTienHDN();
        hoaDonNhaps = new ArrayList();
        hoaDonNhaps = HoaDonNhap.getAll();
        export = 1;
        loadTable();
    }

    private HoaDonNhap getCurrentObject() {
        int maHDN = (txtMHDN.getText().equals(""))
                ? (0) : (Integer.parseInt(txtMHDN.getText()));
        int maNV = (cbbMNV.getSelectedItem().equals(""))
                ? (0) : (Integer.parseInt((String) cbbMNV.getSelectedItem()));
        int maNCC = (cbbMNCC.getSelectedItem().equals(""))
                ? (0) : (Integer.parseInt((String) cbbMNCC.getSelectedItem()));
        Date thoiGian = (((JTextField) dateTG.getDateEditor().
                getUiComponent()).getText().equals("")) ? (new Date(0, 0, 1)) : (dateTG.getDate());
        double tongTien = (txtTT.getText().equals(""))
                ? (0) : (Double.parseDouble(txtTT.getText()));
        return new HoaDonNhap(maHDN, maNV, maNCC, thoiGian, tongTien);
    }

}
