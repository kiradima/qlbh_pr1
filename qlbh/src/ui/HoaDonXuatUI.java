/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entity.HoaDonXuat;
import entity.KhachHang;
import entity.NhanVien;
import entity.TK;
import entity.TKR;
import helper.ExcelHelper;
import helper.WordHelper;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Kira
 */
public class HoaDonXuatUI extends javax.swing.JFrame {

    ArrayList<HoaDonXuat> hoaDonXuats;
    ArrayList<KhachHang> khachHangs;
    ArrayList<NhanVien> nhanViens;
    ArrayList<TK> tks;
    ArrayList<TKR> tkrs;
    int export = 1;
    // @export :
    //      1 : tất cả
    //      2 : thống kê
    //      3 : tìm kiếm
    String thuocTinh = "";

    /**
     * Creates new form HoaDonXuatUI
     */
    public HoaDonXuatUI() {
        initComponents();
        setTitle("Hóa đơn xuất");
        setLocation(200, 30);

        refresh();
        khachHangs = KhachHang.getAll();
        loadCbbKH(khachHangs);
        nhanViens = NhanVien.getAll();
        loadCbbNV(nhanViens);
        JTableHeader header = table.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
        txtTongTien.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnImportFile = new javax.swing.JButton();
        btnExportFile = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnCTHDX = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtMHDX = new javax.swing.JTextField();
        txtTT = new javax.swing.JTextField();
        dateTG = new com.toedter.calendar.JDateChooser();
        cbbMKH = new javax.swing.JComboBox<>();
        txtTKH = new javax.swing.JTextField();
        txtTK = new javax.swing.JTextField();
        btnTK = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rbMKH = new javax.swing.JRadioButton();
        rbNgay = new javax.swing.JRadioButton();
        rbMNV = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnQuayLai = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cbbMNV = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtTNV = new javax.swing.JTextField();
        rbThang = new javax.swing.JRadioButton();
        rbNam = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        btnSua.setBackground(new java.awt.Color(102, 102, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(51, 51, 51));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(102, 102, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 51));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThongKe.setBackground(new java.awt.Color(102, 102, 255));
        btnThongKe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongKe.setForeground(new java.awt.Color(51, 51, 51));
        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        btnImportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnImportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnImportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnImportFile.setText("Thêm 1 file");
        btnImportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportFileActionPerformed(evt);
            }
        });

        btnExportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnExportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnExportFile.setText("Xuất 1 file");
        btnExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFileActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Thời gian : ");

        btnCTHDX.setBackground(new java.awt.Color(102, 102, 255));
        btnCTHDX.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCTHDX.setForeground(new java.awt.Color(51, 51, 51));
        btnCTHDX.setText("Chi tiết hóa đơn xuất");
        btnCTHDX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCTHDXActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tổng tiền : ");

        txtMHDX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        dateTG.setDateFormatString("dd-MM-yyyy");
        dateTG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbbMKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMKHActionPerformed(evt);
            }
        });

        txtTKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTKHActionPerformed(evt);
            }
        });

        txtTK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnTK.setBackground(new java.awt.Color(102, 102, 255));
        btnTK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTK.setForeground(new java.awt.Color(51, 51, 51));
        btnTK.setText("Tìm kiếm");
        btnTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("TÌM KIẾM ");

        buttonGroup1.add(rbMKH);
        rbMKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMKH.setText("Mã khách hàng");
        rbMKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMKHActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbNgay);
        rbNgay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbNgay.setText("Ngày xuất");

        buttonGroup1.add(rbMNV);
        rbMNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMNV.setText("Mã nhân viên");
        rbMNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMNVActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã khách hàng : ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mã hóa đơn xuất : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mã nhân viên : ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tên khách hàng : ");

        btnThem.setBackground(new java.awt.Color(102, 102, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 51));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnQuayLai.setBackground(new java.awt.Color(102, 102, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnQuayLai.setForeground(new java.awt.Color(51, 51, 51));
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(51, 51, 51));
        btnRefresh.setText("Refresh");
        btnRefresh.setToolTipText("");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(102, 102, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(51, 51, 51));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        cbbMNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMNVActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Tên nhân viên : ");

        txtTNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTNVActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbThang);
        rbThang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbThang.setText("Tháng");

        buttonGroup1.add(rbNam);
        rbNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbNam.setText("Năm");

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Đăng xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("NHẬP HÓA ĐƠN XUẤT");

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("CỬA HÀNG MÁY VI TÍNH  K-P-T XIN CHÀO QUÝ KHÁCH !");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("Nhóm1");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("Đoàn Văn Tiến");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("Hàn Trung Kiên");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 0));
        jLabel14.setText("Phan Hà Phương");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtTongTien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtTongTien.setText("Tổng tiền : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMKH)
                            .addComponent(rbNgay))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbMNV)
                            .addComponent(rbThang)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnTK)
                            .addComponent(btnImportFile))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnThongKe)
                            .addComponent(btnExportFile)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1))
                    .addComponent(rbNam))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbbMKH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbbMNV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTKH, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                    .addComponent(txtTNV))
                                .addGap(34, 34, 34))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtTT)
                                        .addComponent(dateTG, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                    .addComponent(txtMHDX, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCTHDX)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addGap(29, 29, 29)
                                .addComponent(btnSua)
                                .addGap(87, 87, 87))
                            .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(46, 46, 46)
                        .addComponent(btnReset)
                        .addContainerGap())))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnQuayLai)
                        .addGap(317, 317, 317)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTongTien)
                .addGap(217, 217, 217))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dateTG, txtTT});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExportFile, btnImportFile, btnTK, btnThongKe});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbMKH)
                            .addComponent(rbMNV))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbNgay)
                            .addComponent(rbThang))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNam)
                        .addGap(15, 15, 15)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTK)
                            .addComponent(btnThongKe))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImportFile)
                            .addComponent(btnExportFile)
                            .addComponent(btnReset)
                            .addComponent(btnXoa)
                            .addComponent(btnSua)
                            .addComponent(btnThem)
                            .addComponent(btnCTHDX)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMHDX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbbMKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel4)
                            .addComponent(cbbMNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtTNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateTG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel6)
                                    .addComponent(txtTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTongTien)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuayLai)
                    .addComponent(btnRefresh)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCTHDX, btnExportFile, btnImportFile, btnQuayLai, btnRefresh, btnReset, btnSua, btnTK, btnThem, btnThongKe, btnXoa});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Sửa", 0)) {
            if (!txtMHDX.getText().equals("")
                    && !((JTextField) dateTG.getDateEditor().
                            getUiComponent()).getText().equals("")) {
                // nếu đảm bảo điền đầy đủ thông tin
                if (1 == HoaDonXuat.update(getCurrentO())) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Xóa", 0)) {
            if (!txtMHDX.getText().equals("")) { // xóa chỉ cần nhập mã
                if (1 == HoaDonXuat.delete(Integer.parseInt(txtMHDX.getText()))) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Điền mã để xóa");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO add your handling code here:
        txtTongTien.setVisible(true);
        tks = new ArrayList<>();
        try {
            if (rbMNV.isSelected()) {
                thuocTinh = "Mã nhân viên";
                tkrs = HoaDonXuat.thongKeRieng(thuocTinh);
                loadTableTKR(thuocTinh);
            } else if (rbMKH.isSelected()) {
                thuocTinh = "Mã khách hàng";
                tkrs = HoaDonXuat.thongKeRieng(thuocTinh);
                loadTableTKR(thuocTinh);
            } else if (rbNgay.isSelected()) {
                thuocTinh = "Ngày";
                tkrs = HoaDonXuat.thongKeRieng(thuocTinh);
                loadTableTKR(thuocTinh);
            } else if (rbThang.isSelected()) {
                thuocTinh = "Tháng";
                tkrs = HoaDonXuat.thongKeRieng(thuocTinh);
                loadTableTKR(thuocTinh);
            } else if (rbNam.isSelected()) {
                thuocTinh = "Năm";
                tkrs = HoaDonXuat.thongKeRieng(thuocTinh);
                loadTableTKR(thuocTinh);
            } else {
                thuocTinh = "";
                txtTongTien.setVisible(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnImportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            String type = file.getName().substring(file.getName().lastIndexOf(".") + 1);
            if (type.equals("xls") || type.equals("xlsx")) {
                try {
                    ArrayList<HoaDonXuat> list = ExcelHelper.importHoaDonXuat(file);
                    int re = -1;
                    for (HoaDonXuat o : list) {
                        re = HoaDonXuat.insert(o);
                        if (re != 1) {
                            break;
                        }
                    }
                    if (re == 1) {
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                        refresh();
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    Logger.getLogger(HoaDonNhapUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnImportFileActionPerformed

    private void btnExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            try {
                switch (export) {
                    // @export :
                    //      1 : tất cả
                    //      2 : thống kê
                    //      3 : tìm kiếm
                    case 1:
                        WordHelper.writeHDX(file, hoaDonXuats, "Thông tin hóa đơn xuất");
                        break;
                    case 2:
                        if (thuocTinh.equals("Tổng tiền")) {

                            WordHelper.writeTK(file, tks, "Thống kê hóa đơn xuất", thuocTinh);
                        } else {
                            WordHelper.writeTKR(file, tkrs, "Thống kê hóa đơn xuất", thuocTinh);
                        }
                        break;
                    case 3:
                        WordHelper.writeHDX(file, hoaDonXuats, "Tìm kiếm hóa đơn xuất");
                        break;
                    case 0:

                }
                JOptionPane.showMessageDialog(null, "Xuất file thành công");
            } catch (IOException ex) {
                Logger.getLogger(HoaDonNhapUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnExportFileActionPerformed

    private void btnCTHDXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCTHDXActionPerformed
        // TODO add your handling code here:
        HoaDonXuat o = getCurrentO();
        HoaDonXuatChiTietUI frame = new HoaDonXuatChiTietUI(o.getMaXuat());
        frame.show();
        this.dispose();
    }//GEN-LAST:event_btnCTHDXActionPerformed

    private void cbbMKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMKHActionPerformed
        // TODO add your handling code here:
        // chọn mã -> show tên
        txtTKH.setText(khachHangs.get(cbbMKH.getSelectedIndex()).getTenKhachHang());
    }//GEN-LAST:event_cbbMKHActionPerformed

    private void txtTKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTKHActionPerformed

    private void btnTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKActionPerformed
        // TODO add your handling code here:
        export = 3;
        // @export :
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        try {
            hoaDonXuats = new ArrayList<>();
            if (rbMKH.isSelected()) {
                hoaDonXuats = HoaDonXuat.search(txtTK.getText(), "maKhachHang");
            }
            if (rbMNV.isSelected()) {
                hoaDonXuats = HoaDonXuat.search(txtTK.getText(), "maNhanVien");
            }
            if (rbNgay.isSelected()) {
                hoaDonXuats = HoaDonXuat.search(txtTK.getText(), "thoiGian");
            }

            loadTableHDX();
        } catch (ParseException e) {

        }
    }//GEN-LAST:event_btnTKActionPerformed

    private void rbMNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMNVActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Thêm", 0)) {
            if (!txtMHDX.getText().equals("")
                    && !((JTextField) dateTG.getDateEditor().
                            getUiComponent()).getText().equals("")) {
                // nếu đảm bảo điền đầy đủ thông tin
                if (1 == HoaDonXuat.insert(getCurrentO())) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        TrangChu o = new TrangChu();
        o.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        hoaDonXuats = HoaDonXuat.getAll();
        loadTableHDX();
        export = 1;
        txtTongTien.setVisible(false);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cbbMNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMNVActionPerformed
        // TODO add your handling code here:
        txtTNV.setText(nhanViens.get(cbbMNV.getSelectedIndex()).getTenNhanVien());
    }//GEN-LAST:event_cbbMNVActionPerformed

    private void txtTNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTNVActionPerformed

    private void rbMKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMKHActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new DangNhap().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonXuatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonXuatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonXuatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonXuatUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonXuatUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCTHDX;
    private javax.swing.JButton btnExportFile;
    private javax.swing.JButton btnImportFile;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTK;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbMKH;
    private javax.swing.JComboBox<String> cbbMNV;
    private com.toedter.calendar.JDateChooser dateTG;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbMKH;
    private javax.swing.JRadioButton rbMNV;
    private javax.swing.JRadioButton rbNam;
    private javax.swing.JRadioButton rbNgay;
    private javax.swing.JRadioButton rbThang;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtMHDX;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTKH;
    private javax.swing.JTextField txtTNV;
    private javax.swing.JTextField txtTT;
    private javax.swing.JLabel txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void loadTableHDX() {

        table.setEnabled(true);
        table.removeAll();
        if (hoaDonXuats != null) {
            String[] columns = new String[]{"Mã", "Khách hàng",
                "Nhân viên", "Thời gian", "Tổng tiền"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (HoaDonXuat o : hoaDonXuats) {
                Vector vector = new Vector();
                vector.add(o.getMaXuat());
                vector.add(KhachHang.get(o.getMaKhachHang()).getTenKhachHang());
                vector.add(NhanVien.get(o.getMaNhanVien()).getTenNhanVien());
                vector.add(new SimpleDateFormat("dd-MM-yyyy").format(o.getThoiGian()));
                vector.add(new DecimalFormat("###.#").format(o.getTongTien()));
                model.addRow(vector);
            }
            table.setModel(model);
            table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (table.getSelectedRow() >= 0) {
                        HoaDonXuat o = hoaDonXuats.get(table.getSelectedRow());// lấy đối tượng được chọn
                        // set mã hóa đơn nhập
                        txtMHDX.setText(o.getMaXuat() + "");
                        //set cbb Mã khách hàng, Tên khách hàng
                        for (int i = 0; i < khachHangs.size(); i++) {
                            if (khachHangs.get(i).getMaKhachHang() == o.getMaKhachHang()) {
                                cbbMKH.setSelectedIndex(i);
                                txtTKH.setText(khachHangs.get(i).getTenKhachHang());
                                break;
                            }
                        }
                        //set cbb Mã nhân viên, tên nhân viên
                        for (int i = 0; i < nhanViens.size(); i++) {
                            if (nhanViens.get(i).getMaNhanVien() == o.getMaNhanVien()) {
                                cbbMNV.setSelectedIndex(i);
                                txtTNV.setText(nhanViens.get(i).getTenNhanVien());
                                break;
                            }
                        }
                        //set thời gian
                        dateTG.setDate(o.getThoiGian());
                        //set tổng tiền
                        txtTT.setText(new DecimalFormat("###.#").format(o.getTongTien()) + "");
                    }
                }
            });
        }
    }

    private void loadTableTK(String thuocTinh) {
        export = 2;
        // @export :
        //      0 : mặc định
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        table.removeAll();
        if (tks != null) {
            String[] columns = new String[]{"TT", thuocTinh, "Số lượng"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (int i = 0; i < tks.size(); i++) {
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(tks.get(i).getThuocTinh());
                vector.add(tks.get(i).getSoLuong());
                model.addRow(vector);
            }
            table.setModel(model);
        }
        table.setEnabled(false);
    }

    private void loadTableTKR(String thuocTinh) {
        export = 2;
        // @export :
        //      0 : mặc định
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        table.removeAll();
        if (tkrs != null) {
            String[] columns = new String[]{"TT", thuocTinh,
                "Tổng tiền", "Số lượng"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            long tongTien = 0;
            for (int i = 0; i < tkrs.size(); i++) {
                TKR tkr = tkrs.get(i);
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(tkr.getTk().getThuocTinh());
                vector.add(tkr.getTongTien());
                tongTien += tkr.getTongTien();
                vector.add(tkr.getTk().getSoLuong());
                model.addRow(vector);
            }
            table.setModel(model);
            txtTongTien.setText("Tổng tiền : " + tongTien);
        }
        table.setEnabled(false);
    }

    private void loadCbbNV(ArrayList<NhanVien> list) {
        cbbMNV.removeAllItems();
        for (int i = 0; i < list.size(); i++) {
            cbbMNV.addItem(list.get(i).getMaNhanVien() + "");
        }
    }

    private void reset() {
        txtMHDX.setText("");
        cbbMKH.setSelectedIndex(0);
        cbbMNV.setSelectedIndex(0);
        ((JTextField) dateTG.getDateEditor().getUiComponent()).setText("");
        txtTT.setText("");
    }

    private void refresh() {
        hoaDonXuats = new ArrayList();
        hoaDonXuats = HoaDonXuat.getAll();
        loadTableHDX();

    }

    private HoaDonXuat getCurrentO() {
        int maHDX = (txtMHDX.getText().equals(""))
                ? (0) : (Integer.parseInt(txtMHDX.getText()));
        int maKH = (cbbMKH.getSelectedItem().equals(""))
                ? (0) : (Integer.parseInt((String) cbbMKH.getSelectedItem()));
        int maNV = (cbbMNV.getSelectedItem().equals(""))
                ? (0) : (Integer.parseInt((String) cbbMNV.getSelectedItem()));
        Date thoiGian = (((JTextField) dateTG.getDateEditor().
                getUiComponent()).getText().equals("")) ? (new Date(0, 0, 1)) : (dateTG.getDate());
        double tongTien = (txtTT.getText().equals(""))
                ? (0) : (Double.parseDouble(txtTT.getText()));
        return new HoaDonXuat(maHDX, maKH, maNV, thoiGian, tongTien);
    }

    private void loadCbbKH(ArrayList<KhachHang> list) {
        cbbMKH.removeAllItems();
        for (int i = 0; i < list.size(); i++) {
            cbbMKH.addItem(list.get(i).getMaKhachHang() + "");
        }
    }

}
