/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entity.ThongKeMayTinhType;
import helper.ConnectDatabase;
import helper.WordHelper;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author hantr
 */
public class ThongKeMayTinh extends javax.swing.JFrame {

    /**
     * Creates new form ThongKeMayTinh
     */
    ConnectDatabase ketNoiQLlBH = null;
    Connection connection = null;
    ArrayList<ThongKeMayTinhType> listThongKe = new ArrayList<>();

    public ThongKeMayTinh() throws ClassNotFoundException {
        ketNoiQLlBH = new ConnectDatabase();
        connection = ketNoiQLlBH.getConnection();
        initComponents();
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(new Color(232, 245, 233));
        JTableHeader header = bangthongke.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
        setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        tenchon = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bangthongke = new javax.swing.JTable();
        nhasxchon = new javax.swing.JRadioButton();
        mausacchon = new javax.swing.JRadioButton();
        gianhapchon = new javax.swing.JRadioButton();
        giabanchon = new javax.swing.JRadioButton();
        namsxchon = new javax.swing.JRadioButton();
        thoigianbhchon = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("THỐNG KÊ MÁY TÍNH");

        buttonGroup1.add(tenchon);
        tenchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tenchon.setText("Tên ");
        tenchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tenchonActionPerformed(evt);
            }
        });

        bangthongke.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bangthongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bangthongke);

        buttonGroup1.add(nhasxchon);
        nhasxchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nhasxchon.setText("Nhà sản xuất ");
        nhasxchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhasxchonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mausacchon);
        mausacchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mausacchon.setText("Màu sắc ");
        mausacchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mausacchonActionPerformed(evt);
            }
        });

        buttonGroup1.add(gianhapchon);
        gianhapchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gianhapchon.setText("Giá nhập ");
        gianhapchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gianhapchonActionPerformed(evt);
            }
        });

        buttonGroup1.add(giabanchon);
        giabanchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        giabanchon.setText("Giá bán ");
        giabanchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giabanchonActionPerformed(evt);
            }
        });

        buttonGroup1.add(namsxchon);
        namsxchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        namsxchon.setText("Năm sản xuất");
        namsxchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namsxchonActionPerformed(evt);
            }
        });

        buttonGroup1.add(thoigianbhchon);
        thoigianbhchon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        thoigianbhchon.setText("Thời gian bảo hành");
        thoigianbhchon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thoigianbhchonActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Xuất file ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 102, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Quay lại");

        jButton3.setBackground(new java.awt.Color(102, 102, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Đăng xuất");

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("CỬA HÀNG MÁY VI TÍNH  K-P-T XIN CHÀO QUÝ KHÁCH !");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 0));
        jLabel15.setText("Nhóm1");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 0));
        jLabel16.setText("Đoàn Văn Tiến");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 0));
        jLabel17.setText("Hàn Trung Kiên");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 0));
        jLabel18.setText("Phan Hà Phương");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel12))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addGap(14, 14, 14)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(243, 243, 243)
                .addComponent(jButton3))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenchon)
                    .addComponent(mausacchon))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nhasxchon)
                            .addComponent(namsxchon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gianhapchon)
                                .addGap(96, 96, 96)
                                .addComponent(giabanchon))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(thoigianbhchon)
                                .addGap(33, 33, 33))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tenchon)
                    .addComponent(nhasxchon)
                    .addComponent(gianhapchon)
                    .addComponent(giabanchon))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mausacchon)
                    .addComponent(namsxchon)
                    .addComponent(thoigianbhchon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tenchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tenchonActionPerformed
        // TODO add your handling code here:
        thongKeTheoTen();

    }//GEN-LAST:event_tenchonActionPerformed

    private void mausacchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mausacchonActionPerformed
        // TODO add your handling code here:
        bangthongke.removeAll();
        String[] columns = {"Màu sắc ", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT Sum(soLuongTonKho), mauSac FROM maytinhchitiet group by mauSac order by Sum(soLuongTonKho) DESC ;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("mauSac"));
                vector.add(resultSet.getInt("Sum(soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }//GEN-LAST:event_mausacchonActionPerformed

    private void gianhapchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gianhapchonActionPerformed
        // TODO add your handling code here:
        bangthongke.removeAll();
        String[] columns = {"Giá nhập ", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT Sum(soLuongTonKho), giaNhap FROM maytinhchitiet group by giaNhap order by Sum(soLuongTonKho) DESC ;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("giaNhap"));
                vector.add(resultSet.getInt("Sum(soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }//GEN-LAST:event_gianhapchonActionPerformed

    private void giabanchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giabanchonActionPerformed
        // TODO add your handling code here:
        bangthongke.removeAll();
        String[] columns = {"Giá bán ", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT Sum(soLuongTonKho), giaBan FROM maytinhchitiet group by giaBan order by Sum(soLuongTonKho) DESC ;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("giaBan"));
                vector.add(resultSet.getInt("Sum(soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }//GEN-LAST:event_giabanchonActionPerformed

    private void nhasxchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhasxchonActionPerformed
        // TODO add your handling code here:
        bangthongke.removeAll();
        String[] columns = {"Nhà sản xuất ", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT  maytinh.nhaSanXuat, sum(maytinhchitiet.soLuongTonKho) FROM maytinh INNER JOIN maytinhchitiet ON maytinh.maMayTinh=maytinhchitiet.maMayTinh group by nhaSanXuat;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("nhaSanXuat"));
                vector.add(resultSet.getInt("sum(maytinhchitiet.soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }//GEN-LAST:event_nhasxchonActionPerformed

    private void namsxchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namsxchonActionPerformed
        // TODO add your handling code here:
        bangthongke.removeAll();
        String[] columns = {"Nhà sản xuất ", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT  maytinh.namSanXuat, sum(maytinhchitiet.soLuongTonKho) FROM maytinh INNER JOIN maytinhchitiet ON maytinh.maMayTinh=maytinhchitiet.maMayTinh group by namSanXuat;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("namSanXuat"));
                vector.add(resultSet.getInt("sum(maytinhchitiet.soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }//GEN-LAST:event_namsxchonActionPerformed

    private void thoigianbhchonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thoigianbhchonActionPerformed
        // TODO add your handling code here:
        bangthongke.removeAll();
        String[] columns = {"Số tháng bảo hành ", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT  maytinh.thoiGianBaoHanh, sum(maytinhchitiet.soLuongTonKho) FROM maytinh INNER JOIN maytinhchitiet ON maytinh.maMayTinh=maytinhchitiet.maMayTinh group by thoiGianBaoHanh;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("thoiGianBaoHanh"));
                vector.add(resultSet.getInt("sum(maytinhchitiet.soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }//GEN-LAST:event_thoigianbhchonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (tenchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList("tenMayTinh");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoTen(file, listThongKe, "Thống kê máy tính theo tên");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }
        } else if (nhasxchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList("nhaSanXuat");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoNhaSanXuat(file, listThongKe, "Thống kê máy tính theo nhà sản xuất");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }

        } else if (namsxchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList("namSanXuat");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoNamSanXuat(file, listThongKe, "Thống kê máy tính theo năm sản xuất");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }
        } else if (thoigianbhchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList("thoiGianBaoHanh");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoThoiGianBaoHanh(file, listThongKe,
                            "Thống kê máy tính theo thời gian bảo hành");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }
        } else if (gianhapchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList2("giaNhap");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoGiaNhap(file, listThongKe, "Thống kê máy tính theo giá nhập");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }
        } else if (giabanchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList("giaBan");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoGiaBan(file, listThongKe, "Thống kê máy tính theo giá bán");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }
        } else if (mausacchon.isSelected()) {
            try {
                listThongKe = ThongKeMayTinhType.getList("mauSac");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
            }

            JFileChooser jFileChooser = new JFileChooser();
            if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = jFileChooser.getSelectedFile();

                try {
                    WordHelper.writeMayTinhTheoMauSac(file, listThongKe, "Thống kê máy tính theo màu sắc");
                    JOptionPane.showMessageDialog(null, "Xuất file thành công");

                } catch (IOException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Xuất file thất bại!");
                }

            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeMayTinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ThongKeMayTinh().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ThongKeMayTinh.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bangthongke;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton giabanchon;
    private javax.swing.JRadioButton gianhapchon;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mausacchon;
    private javax.swing.JRadioButton namsxchon;
    private javax.swing.JRadioButton nhasxchon;
    private javax.swing.JRadioButton tenchon;
    private javax.swing.JRadioButton thoigianbhchon;
    // End of variables declaration//GEN-END:variables

    private void thongKeTheoTen() {
        bangthongke.removeAll();
        String[] columns = {"Tên máy tính", "Số lượng máy tính"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        String sql = "SELECT  tenMayTinh, sum(maytinhchitiet.soLuongTonKho) FROM maytinh INNER JOIN maytinhchitiet ON maytinh.maMayTinh=maytinhchitiet.maMayTinh group by tenMayTinh;";
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("tenMayTinh"));
                vector.add(resultSet.getInt("sum(maytinhchitiet.soLuongTonKho)"));

                model.addRow(vector);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        bangthongke.setModel(model);
    }

}
