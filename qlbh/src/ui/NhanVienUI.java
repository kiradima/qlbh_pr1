/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entity.NhanVien;
import entity.TK;
import helper.ExcelHelper;
import helper.WordHelper;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Kira
 */
public class NhanVienUI extends javax.swing.JFrame {

    ArrayList<NhanVien> nhanViens;
    ArrayList<TK> tks;
//    ArrayList<TKR> tkrs;
    int export = 1;
    // @export :
    //      1 : tất cả
    //      2 : thống kê
    //      3 : tìm kiếm
    String thuocTinh = "";

    /**
     * Creates new form HoaDonNhapUI
     */
    public NhanVienUI() {
        initComponents();
        setTitle("Nhân viên");
        setLocation(250, 30);
        refresh();
        JTableHeader header = table.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        rbMNV = new javax.swing.JRadioButton();
        rbSDT = new javax.swing.JRadioButton();
        rbTNV = new javax.swing.JRadioButton();
        rbDC = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMNV = new javax.swing.JTextField();
        txtDC = new javax.swing.JTextField();
        txtCMT = new javax.swing.JTextField();
        txtTK = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnQuayLai = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnImportFile = new javax.swing.JButton();
        btnExportFile = new javax.swing.JButton();
        rbCMT = new javax.swing.JRadioButton();
        rbNS = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        txtTNV = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        dateNS = new com.toedter.calendar.JDateChooser();
        cbbGT = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCV = new javax.swing.JTextField();
        rbEmail = new javax.swing.JRadioButton();
        rbGT = new javax.swing.JRadioButton();
        rbCV = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("TÌM KIẾM");

        buttonGroup1.add(rbMNV);
        rbMNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMNV.setText("Mã nhân viên");

        buttonGroup1.add(rbSDT);
        rbSDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSDT.setText("Số điện thoại");

        buttonGroup1.add(rbTNV);
        rbTNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbTNV.setText("Tên nhân viên");
        rbTNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTNVActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbDC);
        rbDC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbDC.setText("Địa chỉ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mã nhân viên : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Địa chỉ : ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("CMT");

        txtMNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMNVActionPerformed(evt);
            }
        });

        txtDC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtCMT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnTimKiem.setBackground(new java.awt.Color(102, 102, 255));
        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(51, 51, 51));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(102, 102, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 51));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(102, 102, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(51, 51, 51));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(102, 102, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 51));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThongKe.setBackground(new java.awt.Color(102, 102, 255));
        btnThongKe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongKe.setForeground(new java.awt.Color(51, 51, 51));
        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(102, 102, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(51, 51, 51));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        btnQuayLai.setBackground(new java.awt.Color(102, 102, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnQuayLai.setForeground(new java.awt.Color(51, 51, 51));
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(51, 51, 51));
        btnRefresh.setText("Refresh");
        btnRefresh.setToolTipText("");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnImportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnImportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnImportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnImportFile.setText("Thêm 1 file");
        btnImportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportFileActionPerformed(evt);
            }
        });

        btnExportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnExportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnExportFile.setText("Xuất 1 file");
        btnExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFileActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbCMT);
        rbCMT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbCMT.setText("CMT");

        buttonGroup1.add(rbNS);
        rbNS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbNS.setText("Ngày sinh");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Tên nhân viên : ");

        txtTNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Số điện thoại :");

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Ngày sinh : ");

        dateNS.setDateFormatString("dd-MM-yyyy");
        dateNS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbbGT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbGT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Giới tính : ");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Email : ");

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Chức vụ : ");

        txtCV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        buttonGroup1.add(rbEmail);
        rbEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbEmail.setText("Email");

        buttonGroup1.add(rbGT);
        rbGT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbGT.setText("Giới tính");

        buttonGroup1.add(rbCV);
        rbCV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbCV.setText("Chức vụ");

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Đăng xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("NHẬP THÔNG TIN NHÂN VIÊN");

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setText("CỬA HÀNG MÁY VI TÍNH  K-P-T XIN CHÀO QUÝ KHÁCH !");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 0));
        jLabel15.setText("Nhóm1");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 0));
        jLabel16.setText("Đoàn Văn Tiến");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 0));
        jLabel17.setText("Hàn Trung Kiên");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 0));
        jLabel18.setText("Phan Hà Phương");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(91, 91, 91))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18))
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem)
                .addGap(50, 50, 50)
                .addComponent(btnSua)
                .addGap(50, 50, 50)
                .addComponent(btnXoa)
                .addGap(39, 39, 39)
                .addComponent(btnReset)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnQuayLai)
                .addGap(299, 299, 299)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 336, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbCV)
                            .addComponent(rbGT)
                            .addComponent(rbCMT)
                            .addComponent(rbSDT)
                            .addComponent(rbMNV)
                            .addComponent(btnTimKiem)
                            .addComponent(btnImportFile))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbTNV)
                                    .addComponent(rbDC)
                                    .addComponent(rbNS)
                                    .addComponent(rbEmail)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnExportFile)
                                    .addComponent(btnThongKe)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCV)
                            .addComponent(txtMNV)
                            .addComponent(txtTNV)
                            .addComponent(txtSDT)
                            .addComponent(txtDC)
                            .addComponent(txtCMT)
                            .addComponent(dateNS, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(cbbGT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmail))
                        .addGap(66, 66, 66))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExportFile, btnImportFile, btnThongKe, btnTimKiem});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel3)
                            .addComponent(txtMNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel8)
                            .addComponent(txtTNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel9)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(txtCMT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel10)
                            .addComponent(dateNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel11)
                            .addComponent(cbbGT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel12)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel13)
                            .addComponent(txtCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa)
                            .addComponent(btnReset)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbMNV)
                            .addComponent(rbTNV))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbSDT)
                            .addComponent(rbDC))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbCMT)
                            .addComponent(rbNS))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(rbGT)
                            .addComponent(rbEmail))
                        .addGap(5, 5, 5)
                        .addComponent(rbCV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTimKiem)
                            .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImportFile)
                            .addComponent(btnExportFile))))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh)
                    .addComponent(jButton1)
                    .addComponent(btnQuayLai)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExportFile, btnImportFile, btnThongKe, btnTimKiem});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbTNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbTNVActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO add your handling code here:
        tks = new ArrayList<>();
        try {
            if (rbMNV.isSelected()) {
                thuocTinh = "Mã nhân viên";
            } else if (rbTNV.isSelected()) {
                thuocTinh = "Tên nhân viên";
            } else if (rbSDT.isSelected()) {
                thuocTinh = "Số điện thoại";
            } else if (rbDC.isSelected()) {
                thuocTinh = "Địa chỉ";
            } else if (rbCMT.isSelected()) {
                thuocTinh = "Chứng minh thư";
            } else if (rbNS.isSelected()) {
                thuocTinh = "Ngày sinh";
            } else if (rbGT.isSelected()) {
                thuocTinh = "Giới tính";
            } else if (rbEmail.isSelected()) {
                thuocTinh = "Email";
            } else if (rbCV.isSelected()) {
                thuocTinh = "Chức vụ";
            }
            tks = NhanVien.thongKe(thuocTinh);
            loadTableTK(thuocTinh);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có 
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Thêm", 0)) {
            if (!txtMNV.getText().equals("")
                    && !txtTNV.getText().equals("")
                    && !txtSDT.getText().equals("")
                    && !txtDC.getText().equals("")
                    && !txtCMT.getText().equals("")
                    && !txtEmail.getText().equals("")
                    && !txtCV.getText().equals("")
                    && !((JTextField) dateNS.getDateEditor().getUiComponent()).getText().equals("")) {
                // nếu đảm bảo điền đầy đủ thông tin
                if (1 == NhanVien.insert(getCurrentObject())) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset 
                    reset();
                } else {
//                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có 
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Sửa", 0)) {
            if (!txtMNV.getText().equals("")
                    && !txtTNV.getText().equals("")
                    && !txtSDT.getText().equals("")
                    && !txtDC.getText().equals("")
                    && !txtCMT.getText().equals("")
                    && !txtEmail.getText().equals("")
                    && !txtCV.getText().equals("")
                    && !((JTextField) dateNS.getDateEditor().getUiComponent()).getText().equals("")) {
                // nếu đảm bảo điền đầy đủ thông tin
                if (1 == NhanVien.update(getCurrentObject())) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset 
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có 
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Xóa", 0)) {
            if (!txtMNV.getText().equals("")) { // xóa chỉ cần nhập mã
                if (1 == NhanVien.delete(Integer.parseInt(txtMNV.getText()))) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset 
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Điền mã để xóa");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        export = 3;
        // @export :
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm

        nhanViens = new ArrayList<>();
        if (rbMNV.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "maNhanVien");
        }
        if (rbTNV.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "tenNhanVien");
        }
        if (rbSDT.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "sdtNhanVien");
        }
        if (rbDC.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "diaChiNhanVien");
        }
        if (rbCMT.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "soCMT");
        }
        if (rbNS.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "ngaySinh");
        }
        if (rbGT.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "gioiTinh");
        }
        if (rbEmail.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "emailNhanVien");
        }
        if (rbCV.isSelected()) {
            nhanViens = NhanVien.search(txtTK.getText(), "chucVu");
        }
        loadTable();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnImportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            String type = file.getName().substring(file.getName().lastIndexOf(".") + 1);
            if (type.equals("xls") || type.equals("xlsx")) {
                try {
                    ArrayList<NhanVien> list = ExcelHelper.importNhanVien(file);
                    int re = -1;
                    for (NhanVien o : list) {
                        re = NhanVien.insert(o);
                        if (re != 1) {
                            break;
                        }
                    }
                    if (re == 1) {
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                        refresh();
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    Logger.getLogger(NhanVienUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnImportFileActionPerformed

    private void btnExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            try {
                switch (export) {
                    // @export :
                    //      1 : tất cả
                    //      2 : thống kê
                    //      3 : tìm kiếm
                    case 1:
                        WordHelper.writeNV(file, nhanViens, "Thông tin nhân viên");
                        break;
                    case 2:
                        WordHelper.writeTK(file, tks, "Thống kê nhân viên", thuocTinh);
                        break;
                    case 3:
                        WordHelper.writeNV(file, nhanViens, "Tìm kiếm nhân viên");
                        break;
                    case 0:

                }
                JOptionPane.showMessageDialog(null, "Xuất file thành công");
            } catch (IOException ex) {
                Logger.getLogger(NhanVienUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnExportFileActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        TrangChu o = new TrangChu();
        o.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void txtMNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMNVActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new DangNhap().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NhanVienUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhanVienUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportFile;
    private javax.swing.JButton btnImportFile;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbGT;
    private com.toedter.calendar.JDateChooser dateNS;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbCMT;
    private javax.swing.JRadioButton rbCV;
    private javax.swing.JRadioButton rbDC;
    private javax.swing.JRadioButton rbEmail;
    private javax.swing.JRadioButton rbGT;
    private javax.swing.JRadioButton rbMNV;
    private javax.swing.JRadioButton rbNS;
    private javax.swing.JRadioButton rbSDT;
    private javax.swing.JRadioButton rbTNV;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtCMT;
    private javax.swing.JTextField txtCV;
    private javax.swing.JTextField txtDC;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMNV;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTNV;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        table.setEnabled(true);
        table.removeAll();
        if (nhanViens != null) {
            String[] columns = new String[]{"Mã", "Tên",
                "SĐT", "Địa chỉ", "CMT", "Ngày sinh", "Giới tính", "Email", "Chức vụ"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (NhanVien o : nhanViens) {
                Vector vector = new Vector();
                vector.add(o.getMaNhanVien());
                vector.add(o.getTenNhanVien());
                vector.add(o.getSdtNhanVien());
                vector.add(o.getDiaChiNhanVien());
                vector.add(o.getSoCMT());
                vector.add(new SimpleDateFormat("dd-MM-yyyy").format(o.getNgaySinh()));
                vector.add(o.getGioiTinh());
                vector.add(o.getEmailNhanVien());
                vector.add(o.getChucVu());
                model.addRow(vector);
            }
            table.setModel(model);
            table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (table.getSelectedRow() >= 0) {
                        NhanVien o = nhanViens.get(table.getSelectedRow());// lấy đối tượng được chọn
                        txtMNV.setText(o.getMaNhanVien() + "");
                        txtTNV.setText(o.getTenNhanVien() + "");
                        txtSDT.setText(o.getSdtNhanVien() + "");
                        txtDC.setText(o.getDiaChiNhanVien() + "");
                        txtCMT.setText(o.getSoCMT() + "");
                        dateNS.setDate(o.getNgaySinh());
                        if (o.getGioiTinh().toLowerCase().equals("nam")) {
                            cbbGT.setSelectedIndex(0);
                        } else if (o.getGioiTinh().toLowerCase().equals("nữ")) {
                            cbbGT.setSelectedIndex(1);
                        }
                        txtEmail.setText(o.getEmailNhanVien() + "");
                        txtCV.setText(o.getChucVu() + "");
                    }
                }
            });
        }
    }

    private void loadTableTK(String thuocTinh) {
        export = 2;
        // @export :
        //      0 : mặc định
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        table.removeAll();
        if (tks != null) {
            String[] columns = new String[]{"TT", thuocTinh, "Số lượng"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (int i = 0; i < tks.size(); i++) {
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(tks.get(i).getThuocTinh());
                vector.add(tks.get(i).getSoLuong());
                model.addRow(vector);
            }
            table.setModel(model);
        }
        table.setEnabled(false);
    }

//    private void loadTableTKR(String thuocTinh) {
//        export = 2;
//        // @export :
//        //      0 : mặc định
//        //      1 : tất cả
//        //      2 : thống kê
//        //      3 : tìm kiếm
//        table.removeAll();
//        if (tkrs != null) {
//            String[] columns = new String[]{"TT", thuocTinh,
//                "Tổng tiền", "Số lượng"};
//            DefaultTableModel model = new DefaultTableModel(columns, 0);
//            for (int i = 0; i < tkrs.size(); i++) {
//                TKR tkr = tkrs.get(i);
//                Vector vector = new Vector();
//                vector.add(i + 1);
//                vector.add(tkr.getTk().getThuocTinh());
//                vector.add(tkr.getTongTien());
//                vector.add(tkr.getTk().getSoLuong());
//                model.addRow(vector);
//            }
//            table.setModel(model);
//        }
//        table.setEnabled(false);
//    }
    private void reset() {
        txtMNV.setText("");
        txtTNV.setText("");
        txtSDT.setText("");
        txtDC.setText("");
        txtCMT.setText("");
        ((JTextField) dateNS.getDateEditor().getUiComponent()).setText("");
        cbbGT.setSelectedIndex(0);
        txtEmail.setText("");
        txtCV.setText("");
    }

    private void refresh() {
        nhanViens = new ArrayList();
        nhanViens = NhanVien.getAll();
        export = 1;
        loadTable();
    }

    private NhanVien getCurrentObject() {
        int maNhanVien = (txtMNV.getText().equals(""))
                ? (-1) : (Integer.parseInt(txtMNV.getText()));
        String tenNhanVien = txtTNV.getText();
        String sdtNhanVien = txtSDT.getText();
        String diaChiNhanVien = txtDC.getText();
        String soCMT = txtCMT.getText();
        Date ngaySinh = dateNS.getDate();
        String gioiTinh = (String) cbbGT.getSelectedItem();
        String emailNhanVien = txtEmail.getText();
        String chucVu = txtCV.getText();
        return new NhanVien(maNhanVien, tenNhanVien,
                sdtNhanVien, diaChiNhanVien, soCMT,
                ngaySinh, gioiTinh, emailNhanVien, chucVu);
    }

}
