/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entity.HoaDonNhap;
import entity.HoaDonNhapChiTiet;
import entity.MayTinhChiTiet;
import entity.TK;
import helper.ExcelHelper;
import helper.WordHelper;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Kira
 */
public class HoaDonNhapChiTietUI extends javax.swing.JFrame {

    ArrayList<HoaDonNhapChiTiet> hoaDonNhapChiTiets;
    ArrayList<MayTinhChiTiet> mayTinhChiTiets;
    ArrayList<TK> listTks;
    int export = 1;
    // @export :
    //      1 : tất cả
    //      2 : thống kê
    //      3 : tìm kiếm
    String thuocTinh = "";
    static int maHDN = 0;

    /**
     * Creates new form HoaDonNhapChiTietUI
     */
    public HoaDonNhapChiTietUI(int inputMaHDN) {
        initComponents();
        setTitle("Hóa đơn nhập chi tiết");
        setLocation(200, 30);

        setDefaultCloseOperation(HIDE_ON_CLOSE);
        txtMHDN.setText(inputMaHDN + "");
        maHDN = inputMaHDN;

//        refresh();
        loadListMMTCT();
        loadCbbMMTCT();

        loadListHoaDonNhapChiTiet(inputMaHDN);
        loadDataTable();
//        table.setOpaque(true);
//        table.setFillsViewportHeight(true);
//        table.setBackground(new Color(232, 245, 233));

//        header.setBackground(new Color(232, 245, 233));
//        header.setFont(new Font("Tahoma", Font.BOLD, 18));
        JTableHeader header = table.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));

//        JScrollPane scroll1 = new JScrollPane(table);
//        table.getTableHeader().setBackground(new Color(232, 245, 233));
//        add(scroll1, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtSL = new javax.swing.JTextField();
        txtTT = new javax.swing.JTextField();
        cbbMMTCT = new javax.swing.JComboBox<>();
        txtMTMTCT = new javax.swing.JTextField();
        txtTK = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        rbMMTCT = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        rbTT = new javax.swing.JRadioButton();
        btnSua = new javax.swing.JButton();
        rbSL = new javax.swing.JRadioButton();
        btnXoa = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnQuayLai = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnImportFile = new javax.swing.JButton();
        btnExportFile = new javax.swing.JButton();
        txtMHDN = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtSL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSLActionPerformed(evt);
            }
        });

        txtTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbbMMTCT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMMTCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbMMTCTActionPerformed(evt);
            }
        });

        txtMTMTCT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMTMTCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMTMTCTActionPerformed(evt);
            }
        });

        txtTK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("TÌM KIẾM");

        btnTimKiem.setBackground(new java.awt.Color(102, 102, 255));
        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(51, 51, 51));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Mô tả máy tính chi tiết : ");

        buttonGroup1.add(rbMMTCT);
        rbMMTCT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbMMTCT.setText("Mã máy tính chi tiết");
        rbMMTCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMMTCTActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(102, 102, 255));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThem.setForeground(new java.awt.Color(51, 51, 51));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbTT);
        rbTT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbTT.setText("Tổng tiền");

        btnSua.setBackground(new java.awt.Color(102, 102, 255));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSua.setForeground(new java.awt.Color(51, 51, 51));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbSL);
        rbSL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSL.setText("Số lượng");
        rbSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSLActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(102, 102, 255));
        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(51, 51, 51));
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThongKe.setBackground(new java.awt.Color(102, 102, 255));
        btnThongKe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThongKe.setForeground(new java.awt.Color(51, 51, 51));
        btnThongKe.setText("Thống kê");
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(102, 102, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(51, 51, 51));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã máy tính chi tiết : ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mã hóa đơn nhập : ");

        table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số lượng : ");

        btnQuayLai.setBackground(new java.awt.Color(102, 102, 255));
        btnQuayLai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnQuayLai.setForeground(new java.awt.Color(51, 51, 51));
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnRefresh.setBackground(new java.awt.Color(102, 102, 255));
        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(51, 51, 51));
        btnRefresh.setText("Refresh");
        btnRefresh.setToolTipText("");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tổng tiền : ");

        btnImportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnImportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnImportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnImportFile.setText("Thêm 1 file");
        btnImportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportFileActionPerformed(evt);
            }
        });

        btnExportFile.setBackground(new java.awt.Color(102, 102, 255));
        btnExportFile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExportFile.setForeground(new java.awt.Color(51, 51, 51));
        btnExportFile.setText("Xuất 1 file");
        btnExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFileActionPerformed(evt);
            }
        });

        txtMHDN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Đăng xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("NHẬP HÓA ĐƠN NHẬP CHI TIẾT");

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jLabel12.setBackground(new java.awt.Color(204, 204, 204));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("CỬA HÀNG MÁY VI TÍNH  K-P-T XIN CHÀO QUÝ KHÁCH !");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("Nhóm1");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("Đoàn Văn Tiến");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 0));
        jLabel9.setText("Hàn Trung Kiên");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("Phan Hà Phương");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnQuayLai)
                .addGap(367, 367, 367)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbMMTCT)
                                    .addComponent(rbTT))
                                .addGap(37, 37, 37)
                                .addComponent(rbSL))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnImportFile)
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnThongKe)
                                    .addComponent(btnExportFile)))
                            .addComponent(btnTimKiem)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtSL)
                                    .addComponent(txtTT))
                                .addGap(218, 218, 218))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cbbMMTCT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMTMTCT, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtMHDN, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(btnThem)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(btnSua)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                                .addComponent(btnXoa)
                                .addGap(79, 79, 79)
                                .addComponent(btnReset)
                                .addGap(50, 50, 50))))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExportFile, btnImportFile, btnThongKe, btnTimKiem});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtMHDN, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbbMMTCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMTMTCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(txtTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa)
                            .addComponent(btnReset))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbMMTCT)
                            .addComponent(rbSL))
                        .addGap(18, 18, 18)
                        .addComponent(rbTT)
                        .addGap(18, 18, 18)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTimKiem)
                            .addComponent(btnThongKe))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImportFile)
                            .addComponent(btnExportFile))
                        .addGap(41, 41, 41)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuayLai)
                    .addComponent(btnRefresh)
                    .addComponent(jButton1)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, txtMHDN, txtSL});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbMMTCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbMMTCTActionPerformed
        // TODO add your handling code here:
        // chọn mã -> show tên
        txtMTMTCT.setText(mayTinhChiTiets.get(cbbMMTCT.getSelectedIndex()).getMoTa());
    }//GEN-LAST:event_cbbMMTCTActionPerformed

    private void txtMTMTCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMTMTCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMTMTCTActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        export = 3;
        // @export :
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
//        HoaDonNhapChiTiet o = getCurrentO();
        hoaDonNhapChiTiets = new ArrayList<>();
        if (rbMMTCT.isSelected()) {
            hoaDonNhapChiTiets = HoaDonNhapChiTiet.search(txtTK.getText(), "Mã máy tính chi tiết", maHDN);
        }
        if (rbSL.isSelected()) {
            hoaDonNhapChiTiets = HoaDonNhapChiTiet.search(txtTK.getText(), "Số lượng", maHDN);
        }
        if (rbTT.isSelected()) {
            hoaDonNhapChiTiets = HoaDonNhapChiTiet.search(txtTK.getText(), "Tổng tiền", maHDN);
        }
        loadDataTable();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        //        JOptionPane.showMessageDialog(null, timeTG.);
        //nếu xác nhận là có
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Thêm", 0)) {
            if (!txtMHDN.getText().equals("-1")
                    && !txtSL.getText().equals("")
                    && !txtTT.getText().equals("")) {
                // nếu đảm bảo điền đầy đủ thông tin
                if (1 == HoaDonNhapChiTiet.insert(new HoaDonNhapChiTiet(Integer.parseInt(txtMHDN.getText()),
                        Integer.parseInt((String) cbbMMTCT.getSelectedItem()),
                        Integer.parseInt(txtSL.getText()),
                        Double.parseDouble(txtTT.getText())))) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Sửa", 0)) {
            if (!txtMHDN.getText().equals("-1")
                    && !txtSL.getText().equals("")
                    && !txtTT.getText().equals("")) {
                // nếu đảm bảo điền đầy đủ thông tin
                if (1 == HoaDonNhapChiTiet.update(new HoaDonNhapChiTiet(Integer.parseInt(txtMHDN.getText()),
                        Integer.parseInt((String) cbbMMTCT.getSelectedItem()),
                        Integer.parseInt(txtSL.getText()),
                        Double.parseDouble(txtTT.getText())))) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "Thông tin chưa được điền đầy đủ");
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void rbSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbSLActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        //nếu xác nhận là có
        if (0 == JOptionPane.showConfirmDialog(null, "Xác nhận", "Xóa", 0)) {
            if (!txtMHDN.getText().equals("-1")) { // xóa chỉ cần nhập mã
                if (1 == HoaDonNhapChiTiet.delete(maHDN,
                        Integer.parseInt((String) cbbMMTCT.getSelectedItem()))) {
                    //thông báo
                    JOptionPane.showMessageDialog(null, "Thành công");
                    // reload table
                    refresh();
                    // reset
                    reset();
                } else {
                    JOptionPane.showMessageDialog(null, "Thất bại");
                }
            } else {//nếu điền chưa đủ thông tin-> yêu cầu điền thêm
                JOptionPane.showMessageDialog(null, "MÃ hóa đơn nhập sai");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO add your handling code here:
        listTks = new ArrayList<>();
        try {
            if (rbMMTCT.isSelected()) {
                thuocTinh = "Mã máy tính chi tiết";
                listTks = HoaDonNhapChiTiet.thongKe(thuocTinh, maHDN);
                loadTableTK(thuocTinh);
            } else if (rbSL.isSelected()) {
                thuocTinh = "Số lượng";
                listTks = HoaDonNhapChiTiet.thongKe(thuocTinh, maHDN);
                loadTableTK(thuocTinh);
            } else if (rbTT.isSelected()) {
                thuocTinh = "Tổng tiền";
                listTks = HoaDonNhapChiTiet.thongKe(thuocTinh, maHDN);
                loadTableTK(thuocTinh);
            } else {
                thuocTinh = "";
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        loadListHoaDonNhapChiTiet(maHDN);
        loadDataTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnImportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            String type = file.getName().substring(file.getName().lastIndexOf(".") + 1);
            if (type.equals("xls") || type.equals("xlsx")) {
                try {
                    ArrayList<HoaDonNhapChiTiet> list = ExcelHelper.importHoaDonNhapChiTiet(file);
                    int re = -1;
                    for (HoaDonNhapChiTiet o : list) {
                        re = HoaDonNhapChiTiet.insert(o);
                        if (re != 1) {
                            break;
                        }
                    }
                    if (re == 1) {
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                        refresh();
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Thêm thất bại");
                    Logger.getLogger(HoaDonNhapChiTietUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnImportFileActionPerformed

    private void btnExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFileActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            try {
                switch (export) {
                    // @export :
                    //      1 : tất cả
                    //      2 : thống kê
                    //      3 : tìm kiếm
                    case 1:
                        WordHelper.writeHDNCT(file, hoaDonNhapChiTiets,
                                "Thông tin hóa đơn nhập " + maHDN, maHDN);
                        break;
                    case 2:
                        WordHelper.writeTK(file, listTks, "Thống kê hóa đơn nhập " + maHDN, thuocTinh);
                        break;
                    case 3:
                        WordHelper.writeHDNCT(file, hoaDonNhapChiTiets,
                                "Tìm kiếm hóa đơn nhập " + maHDN, maHDN);
                        break;
                }
                JOptionPane.showMessageDialog(null, "Xuất file thành công");
            } catch (IOException ex) {
                Logger.getLogger(HoaDonNhapChiTietUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnExportFileActionPerformed

    private void rbMMTCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMMTCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMMTCTActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        new HoaDonNhapUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new DangNhap().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSLActionPerformed
        // TODO add your handling code here:
        long tongTien = (long) (MayTinhChiTiet.get(
                Integer.parseInt((String) cbbMMTCT.getSelectedItem())).getGiaNhap()
                * Integer.parseInt(txtSL.getText()));
        txtTT.setText(tongTien + "");
    }//GEN-LAST:event_txtSLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapChiTietUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapChiTietUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapChiTietUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonNhapChiTietUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonNhapChiTietUI(maHDN).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportFile;
    private javax.swing.JButton btnImportFile;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbMMTCT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbMMTCT;
    private javax.swing.JRadioButton rbSL;
    private javax.swing.JRadioButton rbTT;
    private javax.swing.JTable table;
    private javax.swing.JLabel txtMHDN;
    private javax.swing.JTextField txtMTMTCT;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTT;
    // End of variables declaration//GEN-END:variables

    private void loadTableTK(String thuocTinh) {
        export = 2;
        // @export :
        //      0 : mặc định
        //      1 : tất cả
        //      2 : thống kê
        //      3 : tìm kiếm
        table.removeAll();
        if (listTks != null) {
            String[] columns = new String[]{"TT", thuocTinh, "Số lượng"};
            DefaultTableModel model = new DefaultTableModel(columns, 0);
            for (int i = 0; i < listTks.size(); i++) {
                Vector vector = new Vector();
                vector.add(i + 1);
                vector.add(listTks.get(i).getThuocTinh());
                vector.add(listTks.get(i).getSoLuong());
                model.addRow(vector);
            }
            table.setModel(model);
        }
        table.setEnabled(false);
    }

    private void reset() {
        cbbMMTCT.setSelectedIndex(0);
        txtSL.setText("");
        txtMTMTCT.setText("");
        txtTT.setText("");
    }

    private void refresh() {
        loadListHoaDonNhapChiTiet(maHDN);
        loadDataTable();
        export = 1;

    }

    private void loadListMMTCT() {
        String sql = "select * from maytinhchitiet";
        mayTinhChiTiets = MayTinhChiTiet.getAll();
    }

    private void loadCbbMMTCT() {
        cbbMMTCT.removeAllItems();
        for (MayTinhChiTiet o : mayTinhChiTiets) {
            cbbMMTCT.addItem(o.getMaMayTinhChiTiet() + "");
        }
    }

    private void loadDataTable() {

        table.setEnabled(true);
        table.removeAll();
        String[] columns = new String[]{"Mã hóa đơn nhập",
            "Mã máy tính chi tiết", "Số lượng", "Tổng tiền"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        for (HoaDonNhapChiTiet o : hoaDonNhapChiTiets) {
            Vector vector = new Vector();
            vector.add(o.getMaNhap() + "");
            vector.add(o.getMaMayTinhChiTiet() + "");
            vector.add(o.getSoLuong());
            vector.add(new DecimalFormat("###.#").format(o.getTongTien()) + "");
            model.addRow(vector);
        }
        table.setModel(model);
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (table.getSelectedRow() >= 0) {
                    HoaDonNhapChiTiet o = hoaDonNhapChiTiets.get(table.getSelectedRow());
                    for (int i = 0; i < mayTinhChiTiets.size(); i++) {
                        if (o.getMaMayTinhChiTiet() == mayTinhChiTiets.get(i).getMaMayTinhChiTiet()) {
                            cbbMMTCT.setSelectedIndex(i);
                            txtMTMTCT.setText(mayTinhChiTiets.get(i).getMoTa());
                            break;
                        }
                    }
                    txtSL.setText(o.getSoLuong() + "");
                    txtTT.setText(new DecimalFormat("###.#").format(o.getTongTien()) + "");
                }
            }
        });
    }

    private void loadListHoaDonNhapChiTiet(int inputMaHDN) {
        HoaDonNhap o = HoaDonNhap.get(maHDN);
        hoaDonNhapChiTiets = HoaDonNhapChiTiet.getAll(maHDN);
        if (hoaDonNhapChiTiets.size() != 0) {

            int tongTien = 0;
            for (HoaDonNhapChiTiet hoaDonNhapChiTiet : hoaDonNhapChiTiets) {
                tongTien += hoaDonNhapChiTiet.getTongTien();
            }
            o.setTongTien(tongTien);
            HoaDonNhap.update(o);
        } else {
            o.setTongTien(0);
            HoaDonNhap.update(o);
        }
    }
}
